# Generated by Django 3.1.1 on 2020-09-17 11:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('manager', '0018_auto_20200909_2323'),
    ]

    operations = [
        migrations.AlterField(
            model_name='email',
            name='active',
            field=models.BooleanField(default=False, help_text='Whether the email is active or not. Inactive emails will not be sent'),
        ),
        migrations.AlterField(
            model_name='email',
            name='from_email_address',
            field=models.CharField(help_text='Email address from where the sent emails will originate', max_length=256),
        ),
        migrations.AlterField(
            model_name='email',
            name='from_friendly_name',
            field=models.CharField(blank=True, help_text='A display name associated with the from email address', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='email',
            name='preview',
            field=models.BooleanField(default=True, help_text='BE CAREFUL! Un-checking this value will disable sending the preview email. In some cases, if un-checked, this will cause a live email to be sent on the next send cycle.\nSend a preview to a specific set of individuals allowing them to proof the content.'),
        ),
        migrations.AlterField(
            model_name='email',
            name='preview_recipients',
            field=models.TextField(blank=True, help_text='A comma-separated list of preview recipient email addresses', null=True),
        ),
        migrations.AlterField(
            model_name='email',
            name='recipient_groups',
            field=models.ManyToManyField(help_text='Which group(s) of recipients this email will go to.', related_name='emails', to='manager.RecipientGroup'),
        ),
        migrations.AlterField(
            model_name='email',
            name='recurrence',
            field=models.SmallIntegerField(blank=True, choices=[(0, 'Never'), (1, 'Daily'), (2, 'Weekly'), (3, 'Biweekly'), (4, 'Monthly')], default=0, help_text='If and how often the email will be resent.', null=True),
        ),
        migrations.AlterField(
            model_name='email',
            name='replace_delimiter',
            field=models.CharField(default='!@!', help_text='Character(s) that replacement labels are wrapped in.', max_length=10),
        ),
        migrations.AlterField(
            model_name='email',
            name='send_time',
            field=models.TimeField(help_text='Time of day when the email will be sent. Times will be rounded to the nearest quarter hour.'),
        ),
        migrations.AlterField(
            model_name='email',
            name='source_html_uri',
            field=models.URLField(help_text='Source URI of the email HTML. <a href="#" class="upload-modal-trigger btn btn-sm btn-link text-transform-none letter-spacing-0" data-id="id_source_html_uri" data-accept="text/html" data-toggle="modal" data-target="#upload-email-modal">Upload Email</a> <a href="" target="_blank" data-id="id_source_html_uri" class="btn btn-sm btn-link text-transform-none letter-spacing-0 view-email-trigger d-none">View Email HTML</a>'),
        ),
        migrations.AlterField(
            model_name='email',
            name='source_text_uri',
            field=models.URLField(blank=True, help_text='Source URI of the email text. <a href="#" class="upload-modal-trigger btn btn-sm btn-link text-transform-none letter-spacing-0" data-id="id_source_text_uri" data-accept="text/plain" data-toggle="modal" data-target="#upload-email-modal">Upload Email</a> <a href="" target="_blank" data-id="id_source_text_uri" class="btn btn-sm btn-link text-transform-none letter-spacing-0 view-email-trigger d-none">View Email Text</a>', null=True),
        ),
        migrations.AlterField(
            model_name='email',
            name='start_date',
            field=models.DateField(help_text='Date that the email will first be sent.'),
        ),
        migrations.AlterField(
            model_name='email',
            name='subject',
            field=models.CharField(help_text='Subject of the email', max_length=998),
        ),
        migrations.AlterField(
            model_name='email',
            name='title',
            field=models.CharField(help_text='Internal identifier of the email', max_length=100),
        ),
        migrations.AlterField(
            model_name='email',
            name='track_opens',
            field=models.BooleanField(default=True, help_text='Adds a tracking image to email content to track if and when an email is opened.'),
        ),
        migrations.AlterField(
            model_name='email',
            name='track_urls',
            field=models.BooleanField(default=True, help_text='Rewrites all URLs in the email content to be recorded'),
        ),
        migrations.AlterField(
            model_name='recipientgroup',
            name='preview',
            field=models.BooleanField(default=False, help_text='Specify whether this group should be used for organizing recipients of preview emails. Leave unchecked if this group contains/will contain recipients for live emails.', verbose_name='Is a Preview Group'),
        ),
        migrations.AlterField(
            model_name='subscriptioncategory',
            name='applies_to',
            field=models.CharField(blank=True, help_text='The pattern used to determine if users can unsubscribe from emails of this category. For example "(knights)?\\.?ucf\\.edu$" would apply to "email@knights.ucf.edu" and "email@ucf.edu".', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='subscriptioncategory',
            name='cannot_unsubscribe',
            field=models.BooleanField(default=False, help_text='When checked, users following the Applies To pattern will not be able to unsubscribe from emails.'),
        ),
        migrations.AlterField(
            model_name='subscriptioncategory',
            name='description',
            field=models.TextField(help_text='The description of the subscription category. Should include the types of emails sent in this category, as well as frequency.'),
        ),
        migrations.AlterField(
            model_name='subscriptioncategory',
            name='name',
            field=models.CharField(help_text='The name of the subscription category. Will be viewable by front-end users.', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='subscriptioncategory',
            name='unsubscriptions',
            field=models.ManyToManyField(help_text='A list of recipients unsubscribed from this category.', related_name='subscription_category', to='manager.Recipient'),
        ),
    ]
